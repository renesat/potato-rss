openapi: 3.0.1
info:
  title: PotatoRSS
  description: 'Web RSS reader'
  version: 0.1.0
servers:
 - url: http://localhost:8080/api/v1
tags:
  - name: authorization
    description: Авторизация
  - name: user
    description: Работа с пользователями
  - name: source
    description: Работа с ресурсами
  - name: tags
    description: Работа с тегами
paths:
  /user:
    get:
      tags:
        - user
      summary: Получить пользователя
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      summary: Изменить профиль
      requestBody:
        description: Изменяемый пользователь
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUser'
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      summary: Удалить пользователя
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
  /user/registrate:
    post:
      tags:
        - user
      summary: Зарегестрировать пользователя
      requestBody:
        description: Новый пользователь
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUser'
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/auth:
    post:
      tags:
        - authorization
      summary: Авторизовать пользователя
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

      security:
        - basicAuth: []

  /sources:
    get:
      tags:
        - source
      summary: Список ресурсов
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
      security:
          - bearerAuth: []
    post:
      tags:
        - source
      summary: Добавить ресурс
      requestBody:
        description: Новый ресурс
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSource'
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
        - bearerAuth: []
  /sources/{sourceID}:
    get:
      tags:
        - source
      summary: Получить информацию о ресурсе
      parameters:
        - in: path
          name: sourceID
          schema:
            type: integer
          required: true
          description: Id ресурса
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
        - bearerAuth: []
    put:
      tags:
        - source
      summary: Изменить ресурс
      parameters:
        - in: path
          name: sourceID
          schema:
            type: integer
          required: true
          description: Id ресурса
      requestBody:
        description: Изменяемый ресурс
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSource'
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
        - bearerAuth: []
    delete:
      tags:
        - source
      summary: Удалить ресурс
      parameters:
        - in: path
          name: sourceID
          schema:
            type: integer
          required: true
          description: Id ресурса
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
        - bearerAuth: []
  /news:
    get:
      tags:
        - news
      summary: Список новостей
      parameters:
        - in: query
          name: sourceID
          schema:
            type: integer
          required: false
          description: ID ресурса
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
          description: Страница
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/News'
                  isLastPage:
                    type: boolean
                  page:
                    type: integer
                  pageCount:
                    type: integer
      security:
          - bearerAuth: []
  /news/{newsID}:
    get:
      tags:
        - news
      summary: Получить новость
      parameters:
        - in: path
          name: newsID
          schema:
            type: integer
          required: true
          description: ID новости
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
      security:
        - bearerAuth: []
  /news/{newsID}/swapfavourite:
    put:
      tags:
        - news
      summary: Изменить значение избраного
      parameters:
        - in: path
          name: newsID
          schema:
            type: integer
          required: true
          description: ID новости
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
      security:
        - bearerAuth: []
  /news/{newsID}/addTag/{tagName}:
    put:
      tags:
        - tags
        - news
      summary: Добавить тег
      parameters:
        - in: path
          name: newsID
          schema:
            type: integer
          required: true
          description: ID новости
        - in: path
          name: tagName
          schema:
            type: string
          required: true
          description: Имя тега
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
      security:
          - bearerAuth: []
  /news/{newsID}/removeTag/{tagName}:
    delete:
      tags:
        - tags
        - news
      summary: Удалить тег
      parameters:
        - in: path
          name: newsID
          schema:
            type: integer
          required: true
          description: ID новости
        - in: path
          name: tagName
          schema:
            type: string
          required: true
          description: Имя тега
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
      security:
          - bearerAuth: []

  /tags:
    get:
      tags:
        - tags
      summary: Получить теги
      parameters:
        - in: query
          name: sourceID
          schema:
            type: integer
          required: false
          description: ID ресурса
        - in: query
          name: newsID
          schema:
            type: integer
          required: false
          description: ID новости
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
      security:
        - bearerAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        role_id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        email:
          type: string
        avatar:
          type: string
          format: byte
    AddUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    ChangeUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        avatar:
          type: string
          format: byte
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        link:
          type: string
    AddSource:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        link:
          type: string
    ChangeSource:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        link:
          type: string
    News:
      type: object
      properties:
        id:
          type: integer
          format: int64
        source_id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        favourite:
          type: boolean
        link:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              title:
                type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    ChangeTag:
      type: object
      properties:
        title:
          type: string
    Token:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        life_time:
          type: integer
        creation_time:
          type: integer
        token:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
